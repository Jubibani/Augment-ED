plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.devtools.ksp'
}
android {
    compileSdk rootProject.ext.compileSdk
    compileSdkVersion rootProject.ext.compileSdk

    lint {
        baseline = file("lint-baseline.xml")
    }
    defaultConfig {
        applicationId "com.google.ar.sceneform.samples.gltf"
        minSdk rootProject.ext.minSdk
        targetSdk rootProject.ext.targetSdk
        versionCode 1
        versionName "1.0"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ 'jna.nosys': 'true' ]
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    aaptOptions {
        noCompress 'filamat', 'ktx'
    }
    buildFeatures {
        compose true
        viewBinding true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.4'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
        jniLibs {
            useLegacyPackaging = true // Ensures all .so files are included
        }
        pickFirst "lib/**/libjnidispatch.so"
        pickFirst "lib/**/libc++_shared.so"
    }

    repositories {
        flatDir {
            dirs 'src/main/java/com/google/ar/sceneform/samples/gltf/libs'
        }
    }
    sourceSets {
        main {
            assets.srcDirs += "$buildDir/generated/assets"
            jniLibs.srcDirs += 'src/main/jniLibs'
        }
    }
}
// for speech recognition
tasks.register('genUUID') {
    def uuid = UUID.randomUUID().toString()
    def odir = file("$buildDir/generated/assets/model")
    def ofile = file("$odir/uuid")
    doLast {
        mkdir odir
        ofile.text = uuid
    }
}

preBuild.dependsOn(genUUID)

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_coroutines_version"

    // AndroidX
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx_version"

    // Material
    implementation "com.google.android.material:material:$material_version"

    // Sceneform
    implementation "com.gorisse.thomas.sceneform:sceneform:1.23.0"
    implementation 'com.google.ar:core:1.31.0'
    implementation 'androidx.media3:media3-effect:1.4.0'
    implementation 'androidx.test.espresso:espresso-core:3.6.1'
    implementation 'androidx.core:core:1.7.0'
    debugApi project(":sceneform")

    // New dependencies
    implementation 'de.javagl:obj:0.4.0'
    implementation "androidx.compose.material:material-icons-extended:1.5.4"

    // Jetpack Compose
    def compose_version = "1.5.4"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material3:material3:1.1.2"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.activity:activity-compose:1.8.1'
    implementation "androidx.navigation:navigation-compose:2.7.5"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.6.2"

    // Text recognition
    implementation 'com.google.mlkit:text-recognition:16.0.0'

    // Speech recognition
    implementation 'com.alphacephei:vosk-android:0.3.32'
    implementation 'com.airbnb.android:lottie:5.0.3'
    implementation 'net.java.dev.jna:jna:5.16.0'
    implementation 'net.java.dev.jna:jna-platform:5.16.0'



    // Camera
    implementation "androidx.camera:camera-core:1.1.0-beta01"
    implementation 'androidx.camera:camera-camera2:1.1.0'
    implementation 'androidx.camera:camera-lifecycle:1.1.0'
    implementation 'androidx.camera:camera-view:1.1.0'

    // Coil for image loading
    implementation "io.coil-kt:coil-compose:2.4.0"
    implementation 'com.google.android.filament:filament-android:1.13.0'
    implementation 'com.google.android.filament:filament-utils-android:1.13.0'

    // UI
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'

    //For video Playing
    implementation "androidx.media3:media3-exoplayer:1.3.1"
    implementation "androidx.media3:media3-ui:1.3.1"



    // For Cropping
    implementation 'com.github.yalantis:ucrop:2.2.8'

    // Database
    def room_version = "2.6.1"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:2.5.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.5.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.5.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"
    implementation "androidx.lifecycle:lifecycle-runtime-compose:2.6.2"

    // If this project uses any Kotlin source, use Kotlin Symbol Processing (KSP)
    ksp "androidx.room:room-compiler:$room_version"

    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    // For running unity games
    implementation group: 'androidx.games', name: 'games-activity', version: '4.0.0'
    implementation 'androidx.games:games-activity:4.0.0'
    runtimeOnly 'androidx.games:games-activity:4.0.0'

    // Modules
    implementation(name: 'breakBaller-release', ext: 'aar')

}